import org.jlab.groot.data.*;
import org.jlab.groot.ui.*;

String inputFile = args[0];

TDirectory histFile = new TDirectory();
histFile.readFile(inputFile);

H1F hthetapq = (H1F)histFile.getObject("neutrons","hthetapq");
H1F htheta = (H1F)histFile.getObject("neutrons","htheta");
H1F hthetaGen = (H1F)histFile.getObject("neutrons","hthetaGen");
H1F hthetaGen2 = (H1F)histFile.getObject("neutrons","hthetaGen2");
H1F hmomentumRec = (H1F)histFile.getObject("neutrons","hmomentumRec");
H1F hmomentumGen = (H1F)histFile.getObject("neutrons","hmomentumGen");
H1F hmomentumFound = (H1F)histFile.getObject("neutrons","hmomentumFound");
H1F hmomentumGenFound = (H1F)histFile.getObject("neutrons","hmomentumGenFound");
H1F hmissingMass = (H1F)histFile.getObject("neutrons","hmissingMass");
H1F hmissingMassHerm = (H1F)histFile.getObject("neutrons","hmissingMassHerm");
H1F hecSectors = (H1F)histFile.getObject("neutrons","hecSectors");
H2F hacceptance = (H2F)histFile.getObject("neutrons","hacceptance");
H2F hhits = (H2F)histFile.getObject("neutrons","hhits");
GraphErrors hNDE = (GraphErrors)histFile.getObject("neutrons","hNDE");
GraphErrors hNDEGen = (GraphErrors)histFile.getObject("neutrons","hNDEGen");

TCanvas c1 = new TCanvas("NDE Analysis",1920,1080);
c1.divide(5,2);
c1.cd(0);
c1.draw(hthetapq);
c1.cd(1);
c1.draw(htheta);
c1.draw(hthetaGen,"same");
c1.draw(hthetaGen2,"same");
c1.cd(2);
c1.draw(hmomentumRec);
c1.draw(hmomentumGen,"same");
c1.cd(3);
c1.draw(hmomentumFound);
c1.draw(hmomentumGenFound,"same");
c1.cd(4);
c1.draw(hmissingMass);
c1.cd(5);
c1.draw(hmissingMassHerm);
c1.cd(6);
c1.draw(hacceptance);
c1.cd(7);
c1.draw(hNDE);
c1.draw(hNDEGen, "same");
c1.cd(8);
c1.draw(hecSectors);
c1.cd(9);
c1.draw(hhits);